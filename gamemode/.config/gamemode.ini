[general]
; 收割线程将每 5 秒检查一次: 退出的客户端、配置文件更改以及 CPU/集成显卡功耗平衡
reaper_freq=5

; 进入 GameMode 时使用的期望调控器 (governor), 代替 "performance"
desiredgov=performance
; 退出 GameMode 时使用的默认调控器 (governor), 代替恢复原始值
;defaultgov=powersave

; 进入 GameMode 时使用的期望平台性能模式 (platform profile), 代替 "performance"
desiredprof=performance
; 退出 GameMode 时使用的默认平台性能模式 (platform profile), 代替恢复原始值
;defaultprof=low-power

; 当集成显卡 (iGPU) 负载较重时使用的期望调控器
igpu_desiredgov=powersave
; 用于判定集成显卡是否处于重负载的阈值。
; 这是一个 集成显卡瓦数 / CPU 瓦数 的比值, 用于决定何时集成显卡负载足够重, 从而有理由切换到 igpu_desiredgov
; 将此值设置为 -1 可禁用所有 iGPU 检查, 并始终为游戏使用 desiredgov
igpu_power_threshold=0.3

; GameMode 可以在支持的内核上将调度策略更改为 SCHED_ISO（目前上游内核暂不支持）
; 可设置为 "auto"（自动）、"on"（开启）或 "off"（关闭）
; "auto" 会在 CPU 核心数 >=4 时启用
; "on" 表示始终启用
; 默认为 "off"
softrealtime=auto

; GameMode 可以调整游戏进程的优先级 (renice)。你可以在这里设置 0 到 20 之间的任何值，
; 该值会被取负并作为 nice 值应用 (0 表示不更改), 默认为 0
; 要使用此功能, 用户必须被添加到 gamemode 组 (然后需要重启)
; sudo usermod -aG gamemode $(whoami)
renice=10

; 默认情况下，GameMode 将客户端的 I/O 优先级 (iopriority) 调整为 BE/0
; 你可以在这里设置 0 到 7 之间的任何值（0 为最高优先级），或者特殊值 "off"（禁用）或 "reset" (恢复基于 CPU 优先级的 Linux 默认行为)
; 目前仅支持 best-effort (BE) 类，因此你无法在此设置其他类。
ioprio=0

; 设置 GameMode 激活时是否阻止屏幕保护程序
; 默认为 1 (启用)
inhibit_screensaver=1

; 设置 GameMode 激活时是否禁用拆锁缓解（split lock mitigation）
; 默认为 1 (启用)
disable_splitlock=1

[filter]
; 如果 "whitelist" 条目有值，
; gamemode 将拒绝任何不在白名单中的程序
;whitelist=RiseOfTheTombRaider

; Gamemode 将始终拒绝黑名单中的任何程序
;blacklist=HalfLife3
;    glxgears

[gpu]
; 风险提示!
; 严重警告: 使用这些设置风险自负!
; 因本功能导致的任何硬件损坏由你且仅由你承担责任
; 强烈建议你首先手动尝试这些设置以找到最佳点

; 将此设置为关键词 "accept-responsibility" (承担责任) 将允许 gamemode 应用 GPU 优化 (如超频)
;apply_gpu_optimisations=0

; 系统上的 DRM 设备号（通常为 0），即 /sys/class/drm/card0/ 中的数字
;gpu_device=0

; Nvidia 特定设置
; 需要在 nvidia-xconfig 中激活 coolbits 扩展
; 这对应于期望的 GPUPowerMizerMode
; "Adaptive"(自适应)=0, "Prefer Maximum Performance"(首选最大性能)=1, "Auto"(自动)=2
; 参见 https://github.com/NVIDIA/nvidia-settings/blob/master/src/libXNVCtrl/NVCtrl.h 中的 NV_CTRL_GPU_POWER_MIZER_MODE 及相关定义
;nv_powermizer_mode=1

; 这些设置将修改 Nvidia PowerMizer 最高性能状态的核心和显存时钟频率
; 它们作为相对于基线的 MHz 偏移量进行测量。0 会将值重置为默认值，-1 或未设置则不修改值。
;nv_core_clock_mhz_offset=0
;nv_mem_clock_mhz_offset=0

; AMD 特定设置
; 需要相对较新的 AMDGPU 内核模块
; 参见：https://dri.freedesktop.org/docs/drm/gpu/amdgpu.html#gpu-power-thermal-controls-and-monitoring
; 强烈建议使用 lm-sensors（或其他可用工具）验证显卡温度
; 这对应于 power_dpm_force_performance_level，"manual"（手动）模式目前不支持
;amd_performance_level=high

[cpu]
; 核心停用(Parking) 或核心固定(Pinning) 可以通过 "yes"、"true" 或 "1" 启用, 通过 "no"、"false" 或 "0" 禁用
; 也可以设置为要停用或固定的特定核心列表, 以逗号分隔，"-" 表示范围, 例如 "park_cores=1,8-15" 表示停用核心 1 和 8 到 15
; 默认(未注释)是禁用停用但启用固定, 如果其中任一功能启用, 代码目前仅能正确自动检测 Ryzen 7900x3d、7950x3d 和具有 E-核与 P-核的 Intel CPU
; 对于核心停用(Core Parking), 用户必须被添加到 gamemode 组 (核心固定 Core Pinning 不需要)
; sudo usermod -aG gamemode $(whoami)
;park_cores=no
;pin_cores=yes

[supervisor]
; 本节控制新的 gamemode 函数 gamemode_request_start_for 和 gamemode_request_end_for
; 白名单(whitelist) 和黑名单(blacklist) 控制哪些监督程序(supervisor) 被允许发出上述请求
;supervisor_whitelist=
;supervisor_blacklist=

; 如果你想允许一个监督程序完全控制 gamemode, 可以设置此选项
; 这将只允许监督程序客户端使用上述函数注册 gamemode 客户端
;require_supervisor=0

[custom]
; 在 gamemode 启动和结束时执行的自定义脚本 (使用 shell 执行)
;start=notify-send "GameMode 已启动"
;    /home/me/bin/stop_foldingathome.sh

;end=notify-send "GameMode 已结束"
;    /home/me/bin/start_foldingathome.sh

; 脚本超时（秒）。如果脚本未在此时间内完成，将被终止。
;script_timeout=10
